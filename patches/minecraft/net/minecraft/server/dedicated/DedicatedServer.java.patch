--- a/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/net/minecraft/server/dedicated/DedicatedServer.java
@@ -4,13 +_,10 @@
 import com.mojang.authlib.GameProfile;
 import com.mojang.datafixers.DataFixer;
 import com.mojang.logging.LogUtils;
-import java.io.BufferedReader;
 import java.io.IOException;
-import java.io.InputStreamReader;
 import java.io.Writer;
 import java.net.InetAddress;
 import java.net.Proxy;
-import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.util.Collections;
@@ -30,6 +_,7 @@
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.ServerInterface;
 import net.minecraft.server.Services;
+import net.minecraft.server.WorldLoader;
 import net.minecraft.server.WorldStem;
 import net.minecraft.server.gui.MinecraftServerGui;
 import net.minecraft.server.level.ServerLevel;
@@ -51,477 +_,641 @@
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.entity.SkullBlockEntity;
 import net.minecraft.world.level.storage.LevelStorageSource;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.io.IoBuilder;
+import org.bukkit.command.CommandSender;
+import org.bukkit.craftbukkit.Main;
+import org.bukkit.craftbukkit.v1_19_R2.SpigotTimings;
+import org.bukkit.event.server.RemoteServerCommandEvent;
+import org.bukkit.event.server.ServerCommandEvent;
+import org.magmafoundation.magma.configuration.MagmaConfig;
+import org.magmafoundation.magma.protect.InjectProtect;
 import org.slf4j.Logger;
 
 public class DedicatedServer extends MinecraftServer implements ServerInterface {
-   static final Logger f_139598_ = LogUtils.getLogger();
-   private static final int f_142864_ = 5000;
-   private static final int f_142865_ = 2;
-   public final List<ConsoleInput> f_139600_ = Collections.synchronizedList(Lists.newArrayList());
-   @Nullable
-   private QueryThreadGs4 f_139601_;
-   public final RconConsoleSource f_139602_;
-   @Nullable
-   private RconThread f_139603_;
-   private final DedicatedServerSettings f_139604_;
-   @Nullable
-   private MinecraftServerGui f_139605_;
-   @Nullable
-   private final TextFilterClient f_139606_;
-
-   public DedicatedServer(Thread p_214789_, LevelStorageSource.LevelStorageAccess p_214790_, PackRepository p_214791_, WorldStem p_214792_, DedicatedServerSettings p_214793_, DataFixer p_214794_, Services p_214795_, ChunkProgressListenerFactory p_214796_) {
-      super(p_214789_, p_214790_, p_214791_, p_214792_, Proxy.NO_PROXY, p_214794_, p_214795_, p_214796_);
-      this.f_139604_ = p_214793_;
-      this.f_139602_ = new RconConsoleSource(this);
-      this.f_139606_ = TextFilterClient.m_143736_(p_214793_.m_139777_().f_139724_);
-   }
-
-   public boolean m_7038_() throws IOException {
-      Thread thread = new Thread("Server console handler") {
-         public void run() {
-            BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in, StandardCharsets.UTF_8));
-
-            String s1;
-            try {
-               while(!DedicatedServer.this.m_129918_() && DedicatedServer.this.m_130010_() && (s1 = bufferedreader.readLine()) != null) {
-                  DedicatedServer.this.m_139645_(s1, DedicatedServer.this.m_129893_());
-               }
-            } catch (IOException ioexception1) {
-               DedicatedServer.f_139598_.error("Exception handling console input", (Throwable)ioexception1);
-            }
-
-         }
-      };
-      thread.setDaemon(true);
-      thread.setUncaughtExceptionHandler(new DefaultUncaughtExceptionHandler(f_139598_));
-      thread.start();
-      f_139598_.info("Starting minecraft server version {}", (Object)SharedConstants.m_183709_().getName());
-      if (Runtime.getRuntime().maxMemory() / 1024L / 1024L < 512L) {
-         f_139598_.warn("To start the server with more ram, launch it as \"java -Xmx1024M -Xms1024M -jar minecraft_server.jar\"");
-      }
-
-      f_139598_.info("Loading properties");
-      DedicatedServerProperties dedicatedserverproperties = this.f_139604_.m_139777_();
-      if (this.m_129792_()) {
-         this.m_129913_("127.0.0.1");
-      } else {
-         this.m_129985_(dedicatedserverproperties.f_139728_);
-         this.m_129993_(dedicatedserverproperties.f_139729_);
-         this.m_129913_(dedicatedserverproperties.f_139730_);
-      }
-
-      this.m_129997_(dedicatedserverproperties.f_139733_);
-      this.m_129999_(dedicatedserverproperties.f_139734_);
-      this.m_129989_(dedicatedserverproperties.f_139736_);
-      super.m_7196_(dedicatedserverproperties.f_139725_.get());
-      this.m_130004_(dedicatedserverproperties.f_139738_);
-      this.f_129749_.m_5458_(dedicatedserverproperties.f_139740_);
-      f_139598_.info("Default game type: {}", (Object)dedicatedserverproperties.f_139740_);
-      InetAddress inetaddress = null;
-      if (!this.m_130009_().isEmpty()) {
-         inetaddress = InetAddress.getByName(this.m_130009_());
-      }
-
-      if (this.m_7010_() < 0) {
-         this.m_129801_(dedicatedserverproperties.f_139742_);
-      }
-
-      this.m_129793_();
-      f_139598_.info("Starting Minecraft server on {}:{}", this.m_130009_().isEmpty() ? "*" : this.m_130009_(), this.m_7010_());
-
-      try {
-         this.m_129919_().m_9711_(inetaddress, this.m_7010_());
-      } catch (IOException ioexception) {
-         f_139598_.warn("**** FAILED TO BIND TO PORT!");
-         f_139598_.warn("The exception was: {}", (Object)ioexception.toString());
-         f_139598_.warn("Perhaps a server is already running on that port?");
-         return false;
-      }
-
-      if (!this.m_129797_()) {
-         f_139598_.warn("**** SERVER IS RUNNING IN OFFLINE/INSECURE MODE!");
-         f_139598_.warn("The server will make no attempt to authenticate usernames. Beware.");
-         f_139598_.warn("While this makes the game possible to play without internet access, it also opens up the ability for hackers to connect with any username they choose.");
-         f_139598_.warn("To change this, set \"online-mode\" to \"true\" in the server.properties file.");
-      }
-
-      if (this.m_139668_()) {
-         this.m_129927_().m_11006_();
-      }
-
-      if (!OldUsersConverter.m_11106_(this)) {
-         return false;
-      } else {
-         this.m_129823_(new DedicatedPlayerList(this, this.m_247573_(), this.f_129745_));
-         long i = Util.m_137569_();
-         SkullBlockEntity.m_222885_(this.f_236721_, this);
-         GameProfileCache.m_11004_(this.m_129797_());
-         f_139598_.info("Preparing level \"{}\"", (Object)this.m_7123_());
-         this.m_130006_();
-         long j = Util.m_137569_() - i;
-         String s = String.format(Locale.ROOT, "%.3fs", (double)j / 1.0E9D);
-         f_139598_.info("Done ({})! For help, type \"help\"", (Object)s);
-         if (dedicatedserverproperties.f_139744_ != null) {
-            this.m_129900_().m_46170_(GameRules.f_46153_).m_46246_(dedicatedserverproperties.f_139744_, this);
-         }
-
-         if (dedicatedserverproperties.f_139745_) {
-            f_139598_.info("Starting GS4 status listener");
-            this.f_139601_ = QueryThreadGs4.m_11553_(this);
-         }
-
-         if (dedicatedserverproperties.f_139747_) {
-            f_139598_.info("Starting remote control listener");
-            this.f_139603_ = RconThread.m_11615_(this);
-         }
-
-         if (this.m_139669_() > 0L) {
-            Thread thread1 = new Thread(new ServerWatchdog(this));
-            thread1.setUncaughtExceptionHandler(new DefaultUncaughtExceptionHandlerWithName(f_139598_));
-            thread1.setName("Server Watchdog");
-            thread1.setDaemon(true);
-            thread1.start();
-         }
-
-         if (dedicatedserverproperties.f_139721_) {
-            MinecraftServerStatistics.m_18328_(this);
-            f_139598_.info("JMX monitoring enabled");
-         }
-
-         return true;
-      }
-   }
-
-   public boolean m_6998_() {
-      return this.m_7913_().f_139731_ && super.m_6998_();
-   }
-
-   public boolean m_7004_() {
-      return this.f_139604_.m_139777_().f_139705_ && super.m_7004_();
-   }
-
-   public boolean m_6997_() {
-      return this.f_139604_.m_139777_().f_139732_ && super.m_6997_();
-   }
-
-   public DedicatedServerProperties m_7913_() {
-      return this.f_139604_.m_139777_();
-   }
-
-   public void m_7044_() {
-      this.m_129827_(this.m_7913_().f_139739_, true);
-   }
-
-   public boolean m_7035_() {
-      return this.m_7913_().f_139752_;
-   }
-
-   public SystemReport m_142424_(SystemReport p_142870_) {
-      p_142870_.m_143522_("Is Modded", () -> {
-         return this.m_183471_().m_184605_();
-      });
-      p_142870_.m_143522_("Type", () -> {
-         return "Dedicated Server (map_server.txt)";
-      });
-      return p_142870_;
-   }
-
-   public void m_142116_(Path p_142872_) throws IOException {
-      DedicatedServerProperties dedicatedserverproperties = this.m_7913_();
-
-      try (Writer writer = Files.newBufferedWriter(p_142872_)) {
-         writer.write(String.format(Locale.ROOT, "sync-chunk-writes=%s%n", dedicatedserverproperties.f_139720_));
-         writer.write(String.format(Locale.ROOT, "gamemode=%s%n", dedicatedserverproperties.f_139740_));
-         writer.write(String.format(Locale.ROOT, "spawn-monsters=%s%n", dedicatedserverproperties.f_139705_));
-         writer.write(String.format(Locale.ROOT, "entity-broadcast-range-percentage=%d%n", dedicatedserverproperties.f_139723_));
-         writer.write(String.format(Locale.ROOT, "max-world-size=%d%n", dedicatedserverproperties.f_139719_));
-         writer.write(String.format(Locale.ROOT, "spawn-npcs=%s%n", dedicatedserverproperties.f_139732_));
-         writer.write(String.format(Locale.ROOT, "view-distance=%d%n", dedicatedserverproperties.f_139714_));
-         writer.write(String.format(Locale.ROOT, "simulation-distance=%d%n", dedicatedserverproperties.f_183715_));
-         writer.write(String.format(Locale.ROOT, "spawn-animals=%s%n", dedicatedserverproperties.f_139731_));
-         writer.write(String.format(Locale.ROOT, "generate-structures=%s%n", dedicatedserverproperties.f_243824_.m_247749_()));
-         writer.write(String.format(Locale.ROOT, "use-native=%s%n", dedicatedserverproperties.f_139707_));
-         writer.write(String.format(Locale.ROOT, "rate-limit=%d%n", dedicatedserverproperties.f_139713_));
-      }
-
-   }
-
-   public void m_6988_() {
-      if (this.f_139606_ != null) {
-         this.f_139606_.close();
-      }
-
-      if (this.f_139605_ != null) {
-         this.f_139605_.m_139925_();
-      }
-
-      if (this.f_139603_ != null) {
-         this.f_139603_.m_7530_();
-      }
-
-      if (this.f_139601_ != null) {
-         this.f_139601_.m_7530_();
-      }
-
-   }
-
-   public void m_5703_(BooleanSupplier p_139661_) {
-      super.m_5703_(p_139661_);
-      this.m_139665_();
-   }
-
-   public boolean m_7079_() {
-      return this.m_7913_().f_139753_;
-   }
-
-   public void m_139645_(String p_139646_, CommandSourceStack p_139647_) {
-      this.f_139600_.add(new ConsoleInput(p_139646_, p_139647_));
-   }
-
-   public void m_139665_() {
-      while(!this.f_139600_.isEmpty()) {
-         ConsoleInput consoleinput = this.f_139600_.remove(0);
-         this.m_129892_().m_230957_(consoleinput.f_135929_, consoleinput.f_135928_);
-      }
-
-   }
-
-   public boolean m_6982_() {
-      return true;
-   }
-
-   public int m_7032_() {
-      return this.m_7913_().f_139713_;
-   }
-
-   public boolean m_6994_() {
-      return this.m_7913_().f_139707_;
-   }
-
-   public DedicatedPlayerList m_6846_() {
-      return (DedicatedPlayerList)super.m_6846_();
-   }
-
-   public boolean m_6992_() {
-      return true;
-   }
-
-   public String m_6866_() {
-      return this.m_130009_();
-   }
-
-   public int m_7448_() {
-      return this.m_7010_();
-   }
-
-   public String m_6995_() {
-      return this.m_129916_();
-   }
-
-   public void m_139667_() {
-      if (this.f_139605_ == null) {
-         this.f_139605_ = MinecraftServerGui.m_139921_(this);
-      }
-
-   }
-
-   public boolean m_6370_() {
-      return this.f_139605_ != null;
-   }
-
-   public boolean m_6993_() {
-      return this.m_7913_().f_139708_;
-   }
-
-   public int m_6396_() {
-      return this.m_7913_().f_139709_;
-   }
-
-   public boolean m_7762_(ServerLevel p_139630_, BlockPos p_139631_, Player p_139632_) {
-      if (p_139630_.m_46472_() != Level.f_46428_) {
-         return false;
-      } else if (this.m_6846_().m_11307_().m_11390_()) {
-         return false;
-      } else if (this.m_6846_().m_11303_(p_139632_.m_36316_())) {
-         return false;
-      } else if (this.m_6396_() <= 0) {
-         return false;
-      } else {
-         BlockPos blockpos = p_139630_.m_220360_();
-         int i = Mth.m_14040_(p_139631_.m_123341_() - blockpos.m_123341_());
-         int j = Mth.m_14040_(p_139631_.m_123343_() - blockpos.m_123343_());
-         int k = Math.max(i, j);
-         return k <= this.m_6396_();
-      }
-   }
-
-   public boolean m_6373_() {
-      return this.m_7913_().f_139722_;
-   }
-
-   public boolean m_183306_() {
-      return this.m_7913_().f_183716_;
-   }
-
-   public int m_7022_() {
-      return this.m_7913_().f_139710_;
-   }
-
-   public int m_7034_() {
-      return this.m_7913_().f_139711_;
-   }
-
-   public void m_7196_(int p_139676_) {
-      super.m_7196_(p_139676_);
-      this.f_139604_.m_139778_((p_248196_) -> {
-         return p_248196_.f_139725_.m_139895_(this.m_206579_(), p_139676_);
-      });
-   }
-
-   public boolean m_6983_() {
-      return this.m_7913_().f_139717_;
-   }
-
-   public boolean m_6102_() {
-      return this.m_7913_().f_139718_;
-   }
-
-   public int m_6329_() {
-      return this.m_7913_().f_139719_;
-   }
-
-   public int m_6328_() {
-      return this.m_7913_().f_139716_;
-   }
-
-   public boolean m_214005_() {
-      return this.m_7913_().f_214804_ && this.m_7913_().f_139728_;
-   }
-
-   protected boolean m_139668_() {
-      boolean flag = false;
-
-      for(int i = 0; !flag && i <= 2; ++i) {
-         if (i > 0) {
-            f_139598_.warn("Encountered a problem while converting the user banlist, retrying in a few seconds");
-            this.m_139671_();
-         }
-
-         flag = OldUsersConverter.m_11081_(this);
-      }
-
-      boolean flag1 = false;
-
-      for(int j = 0; !flag1 && j <= 2; ++j) {
-         if (j > 0) {
-            f_139598_.warn("Encountered a problem while converting the ip banlist, retrying in a few seconds");
-            this.m_139671_();
-         }
-
-         flag1 = OldUsersConverter.m_11098_(this);
-      }
-
-      boolean flag2 = false;
-
-      for(int k = 0; !flag2 && k <= 2; ++k) {
-         if (k > 0) {
-            f_139598_.warn("Encountered a problem while converting the op list, retrying in a few seconds");
-            this.m_139671_();
-         }
-
-         flag2 = OldUsersConverter.m_11102_(this);
-      }
-
-      boolean flag3 = false;
-
-      for(int l = 0; !flag3 && l <= 2; ++l) {
-         if (l > 0) {
-            f_139598_.warn("Encountered a problem while converting the whitelist, retrying in a few seconds");
-            this.m_139671_();
-         }
-
-         flag3 = OldUsersConverter.m_11104_(this);
-      }
-
-      boolean flag4 = false;
-
-      for(int i1 = 0; !flag4 && i1 <= 2; ++i1) {
-         if (i1 > 0) {
-            f_139598_.warn("Encountered a problem while converting the player save files, retrying in a few seconds");
-            this.m_139671_();
-         }
-
-         flag4 = OldUsersConverter.m_11090_(this);
-      }
-
-      return flag || flag1 || flag2 || flag3 || flag4;
-   }
-
-   private void m_139671_() {
-      try {
-         Thread.sleep(5000L);
-      } catch (InterruptedException interruptedexception) {
-      }
-   }
-
-   public long m_139669_() {
-      return this.m_7913_().f_139712_;
-   }
-
-   public int m_213994_() {
-      return this.m_7913_().f_214801_;
-   }
-
-   public String m_7138_() {
-      return "";
-   }
-
-   public String m_7261_(String p_139644_) {
-      this.f_139602_.m_11512_();
-      this.m_18709_(() -> {
-         this.m_129892_().m_230957_(this.f_139602_.m_11514_(), p_139644_);
-      });
-      return this.f_139602_.m_11513_();
-   }
-
-   public void m_139688_(boolean p_139689_) {
-      this.f_139604_.m_139778_((p_248193_) -> {
-         return p_248193_.f_139726_.m_139895_(this.m_206579_(), p_139689_);
-      });
-   }
-
-   public void m_7041_() {
-      super.m_7041_();
-      Util.m_137580_();
-      SkullBlockEntity.m_196704_();
-   }
-
-   public boolean m_7779_(GameProfile p_139642_) {
-      return false;
-   }
-
-   public int m_7186_(int p_139659_) {
-      return this.m_7913_().f_139723_ * p_139659_ / 100;
-   }
-
-   public String m_7123_() {
-      return this.f_129744_.m_78277_();
-   }
-
-   public boolean m_6365_() {
-      return this.f_139604_.m_139777_().f_139720_;
-   }
-
-   public TextFilter m_7950_(ServerPlayer p_139634_) {
-      return this.f_139606_ != null ? this.f_139606_.m_10134_(p_139634_.m_36316_()) : TextFilter.f_143703_;
-   }
-
-   @Nullable
-   public GameType m_142359_() {
-      return this.f_139604_.m_139777_().f_139737_ ? this.f_129749_.m_5464_() : null;
-   }
-
-   public Optional<MinecraftServer.ServerResourcePackInfo> m_214042_() {
-      return this.f_139604_.m_139777_().f_214802_;
-   }
+  static final Logger f_139598_ = LogUtils.getLogger();
+  private static final int f_142864_ = 5000;
+  private static final int f_142865_ = 2;
+  public final List<ConsoleInput> f_139600_ = Collections.synchronizedList(Lists.newArrayList());
+  @Nullable
+  private QueryThreadGs4 f_139601_;
+  public final RconConsoleSource f_139602_;
+  @Nullable
+  private RconThread f_139603_;
+  public DedicatedServerSettings f_139604_;
+  @Nullable
+  private MinecraftServerGui f_139605_;
+  @Nullable
+  private final TextFilterClient f_139606_;
+
+  public DedicatedServer(joptsimple.OptionSet options, WorldLoader.DataLoadContext worldLoader, Thread p_214789_,
+                         LevelStorageSource.LevelStorageAccess p_214790_, PackRepository p_214791_, WorldStem p_214792_,
+                         DedicatedServerSettings p_214793_, DataFixer p_214794_, Services p_214795_,
+                         ChunkProgressListenerFactory p_214796_) {
+    super(options, worldLoader, p_214789_, p_214790_, p_214791_, p_214792_, Proxy.NO_PROXY, p_214794_, p_214795_,
+        p_214796_);
+    this.f_139604_ = p_214793_;
+    this.f_139602_ = new RconConsoleSource(this);
+    this.f_139606_ = TextFilterClient.m_143736_(p_214793_.m_139777_().f_139724_);
+  }
+
+  public boolean m_7038_() throws IOException {
+    Thread thread = new Thread("Server console handler") {
+      public void run() {
+        if (net.minecraftforge.server.console.TerminalHandler.handleCommands(DedicatedServer.this)) {
+          return;
+        }
+        // CraftBukkit start
+        if (!Main.useConsole) {
+          return;
+        }
+        jline.console.ConsoleReader bufferedreader = reader;
+        // MC-33041, SPIGOT-5538: if System.in is not valid due to javaw, then return
+        try {
+          System.in.available();
+        } catch (IOException ex) {
+          return;
+        }
+        // CraftBukkit end
+
+        String s1;
+        try {
+          // CraftBukkit start - JLine disabling compatibility
+          while (!DedicatedServer.this.m_129918_() && DedicatedServer.this.m_130010_()) {
+            if (Main.useJline) {
+              s1 = bufferedreader.readLine(">", null);
+            } else {
+              s1 = bufferedreader.readLine();
+            }
+
+            // SPIGOT-5220: Throttle if EOF (ctrl^d) or stdin is /dev/null
+            if (s1 == null) {
+              try {
+                Thread.sleep(50L);
+              } catch (InterruptedException ex) {
+                Thread.currentThread().interrupt();
+              }
+              continue;
+            }
+            if (s1.trim().length() > 0) { // Trim to filter lines which are just spaces
+              DedicatedServer.this.m_139645_(s1, DedicatedServer.this.m_129893_());
+            }
+            // CraftBukkit end
+          }
+        } catch (IOException ioexception1) {
+          DedicatedServer.f_139598_.error("Exception handling console input", (Throwable) ioexception1);
+        }
+
+      }
+    };
+
+    // CraftBukkit start - TODO: handle command-line logging arguments
+    java.util.logging.Logger global = java.util.logging.Logger.getLogger("");
+    global.setUseParentHandlers(false);
+    for (java.util.logging.Handler handler : global.getHandlers()) {
+      global.removeHandler(handler);
+    }
+    global.addHandler(new org.bukkit.craftbukkit.v1_19_R2.util.ForwardLogHandler());
+
+    final org.apache.logging.log4j.core.Logger logger =
+        ((org.apache.logging.log4j.core.Logger) LogManager.getRootLogger());
+    for (org.apache.logging.log4j.core.Appender appender : logger.getAppenders().values()) {
+      if (appender instanceof org.apache.logging.log4j.core.appender.ConsoleAppender) {
+        logger.removeAppender(appender);
+      }
+    }
+
+
+    new org.bukkit.craftbukkit.v1_19_R2.util.TerminalConsoleWriterThread(System.out, this.reader).start();
+    System.setOut(IoBuilder.forLogger(logger).setLevel(org.apache.logging.log4j.Level.INFO).buildPrintStream());
+    System.setErr(IoBuilder.forLogger(logger).setLevel(org.apache.logging.log4j.Level.WARN).buildPrintStream());
+    // CraftBukkit end
+
+    thread.setDaemon(true);
+    thread.setUncaughtExceptionHandler(new DefaultUncaughtExceptionHandler(f_139598_));
+    thread.start();
+    f_139598_.info("Starting minecraft server version {}", (Object) SharedConstants.m_183709_().getName());
+    if (Runtime.getRuntime().maxMemory() / 1024L / 1024L < 512L) {
+      f_139598_.warn(
+          "To start the server with more ram, launch it as \"java -Xmx1024M -Xms1024M -jar minecraft_server.jar\"");
+    }
+
+    f_139598_.info("Loading properties");
+    DedicatedServerProperties dedicatedserverproperties = this.f_139604_.m_139777_();
+    if (this.m_129792_()) {
+      this.m_129913_("127.0.0.1");
+    } else {
+      this.m_129985_(dedicatedserverproperties.f_139728_);
+      this.m_129993_(dedicatedserverproperties.f_139729_);
+      this.m_129913_(dedicatedserverproperties.f_139730_);
+    }
+
+    // Spigot start
+    this.m_129823_(new DedicatedPlayerList(this, this.m_247573_(), this.f_129745_));
+    org.spigotmc.SpigotConfig.init((java.io.File) options.valueOf("spigot-settings"));
+    org.spigotmc.SpigotConfig.registerCommands();
+    // Spigot end
+
+    // Magma start
+    MagmaConfig.instance.registerCommands();
+    // Magma end
+
+    this.m_129997_(dedicatedserverproperties.f_139733_);
+    this.m_129999_(dedicatedserverproperties.f_139734_);
+    this.m_129989_(dedicatedserverproperties.f_139736_);
+    super.m_7196_(dedicatedserverproperties.f_139725_.get());
+    this.m_130004_(dedicatedserverproperties.f_139738_);
+    this.f_129749_.m_5458_(dedicatedserverproperties.f_139740_);
+    f_139598_.info("Default game type: {}", (Object) dedicatedserverproperties.f_139740_);
+    InetAddress inetaddress = null;
+    if (!this.m_130009_().isEmpty()) {
+      inetaddress = InetAddress.getByName(this.m_130009_());
+    }
+
+    if (this.m_7010_() < 0) {
+      this.m_129801_(dedicatedserverproperties.f_139742_);
+    }
+
+    this.m_129793_();
+    f_139598_.info("Starting Minecraft server on {}:{}", this.m_130009_().isEmpty() ? "*" : this.m_130009_(),
+        this.m_7010_());
+
+    try {
+      this.m_129919_().m_9711_(inetaddress, this.m_7010_());
+    } catch (IOException ioexception) {
+      f_139598_.warn("**** FAILED TO BIND TO PORT!");
+      f_139598_.warn("The exception was: {}", (Object) ioexception.toString());
+      f_139598_.warn("Perhaps a server is already running on that port?");
+      return false;
+    }
+
+    // CraftBukkit start
+    // this.setPlayerList(new DedicatedPlayerList(this, this.registries(), this.playerDataStorage)); // Spigot - moved up
+    server.loadPlugins();
+    server.enablePlugins(org.bukkit.plugin.PluginLoadOrder.STARTUP);
+    // CraftBukkit end
+
+    if (!this.m_129797_()) {
+      f_139598_.warn("**** SERVER IS RUNNING IN OFFLINE/INSECURE MODE!");
+      f_139598_.warn("The server will make no attempt to authenticate usernames. Beware.");
+      // Spigot start
+      if (org.spigotmc.SpigotConfig.bungee) {
+        DedicatedServer.f_139598_.warn("Whilst this makes it possible to use BungeeCord, unless access to your server is properly restricted, it also opens up the ability for hackers to connect with any username they choose.");
+        DedicatedServer.f_139598_.warn("Please see http://www.spigotmc.org/wiki/firewall-guide/ for further information.");
+      } else {
+        DedicatedServer.f_139598_.warn("While this makes the game possible to play without internet access, it also opens up the ability for hackers to connect with any username they choose.");
+      }
+      // Spigot end
+      f_139598_.warn("To change this, set \"online-mode\" to \"true\" in the server.properties file.");
+    }
+
+    if (this.m_139668_()) {
+      this.m_129927_().m_11006_();
+    }
+
+    if (!OldUsersConverter.m_11106_(this)) {
+      return false;
+    } else {
+      // this.setPlayerList(new DedicatedPlayerList(this, this.registries(), this.playerDataStorage));  // CraftBukkit - moved up
+      long i = Util.m_137569_();
+      SkullBlockEntity.m_222885_(this.f_236721_, this);
+      GameProfileCache.m_11004_(this.m_129797_());
+      if (!net.minecraftforge.server.ServerLifecycleHooks.handleServerAboutToStart(this)) {
+        return false;
+      }
+      f_139598_.info("Preparing level \"{}\"", (Object) this.m_7123_());
+      this.loadLevel(f_129744_.m_78277_());
+      long j = Util.m_137569_() - i;
+      String s = String.format(Locale.ROOT, "%.3fs", (double) j / 1.0E9D);
+      f_139598_.info("Done ({})! For help, type \"help\"", (Object) s);
+      this.f_129726_ = Util.m_137550_(); //Forge: Update server time to prevent watchdog/spaming during long load.
+      if (dedicatedserverproperties.f_139744_ != null) {
+        this.m_129900_().m_46170_(GameRules.f_46153_)
+            .m_46246_(dedicatedserverproperties.f_139744_, this);
+      }
+
+      if (dedicatedserverproperties.f_139745_) {
+        f_139598_.info("Starting GS4 status listener");
+        this.f_139601_ = QueryThreadGs4.m_11553_(this);
+      }
+
+      if (dedicatedserverproperties.f_139747_) {
+        f_139598_.info("Starting remote control listener");
+        this.f_139603_ = RconThread.m_11615_(this);
+        this.remoteConsole = new org.bukkit.craftbukkit.v1_19_R2.command.CraftRemoteConsoleCommandSender(
+            this.f_139602_); // CraftBukkit
+      }
+
+      if (false && this.m_139669_() > 0L) {  // Spigot - disable
+        Thread thread1 = new Thread(new ServerWatchdog(this));
+        thread1.setUncaughtExceptionHandler(new DefaultUncaughtExceptionHandlerWithName(f_139598_));
+        thread1.setName("Server Watchdog");
+        thread1.setDaemon(true);
+        thread1.start();
+      }
+
+      // <3 you Grum for this, saves us ~30 patch files! --^
+      if (dedicatedserverproperties.f_139721_) {
+        MinecraftServerStatistics.m_18328_(this);
+        f_139598_.info("JMX monitoring enabled");
+      }
+
+      return net.minecraftforge.server.ServerLifecycleHooks.handleServerStarting(this);
+    }
+  }
+
+  public boolean m_6998_() {
+    return this.m_7913_().f_139731_ && super.m_6998_();
+  }
+
+  public boolean m_7004_() {
+    return this.f_139604_.m_139777_().f_139705_ && super.m_7004_();
+  }
+
+  public boolean m_6997_() {
+    return this.f_139604_.m_139777_().f_139732_ && super.m_6997_();
+  }
+
+  public DedicatedServerProperties m_7913_() {
+    return this.f_139604_.m_139777_();
+  }
+
+  public void m_7044_() {
+    this.m_129827_(this.m_7913_().f_139739_, true);
+  }
+
+  public boolean m_7035_() {
+    return this.m_7913_().f_139752_;
+  }
+
+  public SystemReport m_142424_(SystemReport p_142870_) {
+    p_142870_.m_143522_("Is Modded", () -> {
+      return this.m_183471_().m_184605_();
+    });
+    p_142870_.m_143522_("Type", () -> {
+      return "Dedicated Server (map_server.txt)";
+    });
+    return p_142870_;
+  }
+
+  public void m_142116_(Path p_142872_) throws IOException {
+    DedicatedServerProperties dedicatedserverproperties = this.m_7913_();
+
+    try (Writer writer = Files.newBufferedWriter(p_142872_)) {
+      writer.write(String.format(Locale.ROOT, "sync-chunk-writes=%s%n", dedicatedserverproperties.f_139720_));
+      writer.write(String.format(Locale.ROOT, "gamemode=%s%n", dedicatedserverproperties.f_139740_));
+      writer.write(String.format(Locale.ROOT, "spawn-monsters=%s%n", dedicatedserverproperties.f_139705_));
+      writer.write(String.format(Locale.ROOT, "entity-broadcast-range-percentage=%d%n",
+          dedicatedserverproperties.f_139723_));
+      writer.write(String.format(Locale.ROOT, "max-world-size=%d%n", dedicatedserverproperties.f_139719_));
+      writer.write(String.format(Locale.ROOT, "spawn-npcs=%s%n", dedicatedserverproperties.f_139732_));
+      writer.write(String.format(Locale.ROOT, "view-distance=%d%n", dedicatedserverproperties.f_139714_));
+      writer.write(
+          String.format(Locale.ROOT, "simulation-distance=%d%n", dedicatedserverproperties.f_183715_));
+      writer.write(String.format(Locale.ROOT, "spawn-animals=%s%n", dedicatedserverproperties.f_139731_));
+      writer.write(String.format(Locale.ROOT, "generate-structures=%s%n",
+          dedicatedserverproperties.f_243824_.m_247749_()));
+      writer.write(String.format(Locale.ROOT, "use-native=%s%n", dedicatedserverproperties.f_139707_));
+      writer.write(String.format(Locale.ROOT, "rate-limit=%d%n", dedicatedserverproperties.f_139713_));
+    }
+
+  }
+
+  public void m_6988_() {
+    if (this.f_139606_ != null) {
+      this.f_139606_.close();
+    }
+
+    if (this.f_139605_ != null) {
+      this.f_139605_.m_139925_();
+    }
+
+    if (this.f_139603_ != null) {
+      this.f_139603_.m_7530_();
+    }
+
+    if (this.f_139601_ != null) {
+      this.f_139601_.m_7530_();
+    }
+
+    //Magma start - injectprotect
+    InjectProtect.shutdownCalled();
+    //Magma end
+
+    Runtime.getRuntime().halt(0);
+  }
+
+  public void m_5703_(BooleanSupplier p_139661_) {
+    super.m_5703_(p_139661_);
+    this.m_139665_();
+  }
+
+  public boolean m_7079_() {
+    return this.m_7913_().f_139753_;
+  }
+
+  public void m_139645_(String p_139646_, CommandSourceStack p_139647_) {
+    this.f_139600_.add(new ConsoleInput(p_139646_, p_139647_));
+  }
+
+  public void m_139665_() {
+    SpigotTimings.serverCommandTimer.startTiming(); // Spigot
+    while (!this.f_139600_.isEmpty()) {
+      ConsoleInput consoleinput = this.f_139600_.remove(0);
+      // CraftBukkit start - ServerCommand for preprocessing
+      ServerCommandEvent event = new ServerCommandEvent(console, consoleinput.f_135928_);
+      server.getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+        continue;
+      }
+      consoleinput = new ConsoleInput(event.getCommand(), consoleinput.f_135929_);
+      // this.getCommands().performPrefixedCommand(consoleinput.source, consoleinput.msg); // Called in dispatchServerCommand
+      server.dispatchServerCommand(console, consoleinput);
+      // CraftBukkit end
+    }
+    SpigotTimings.serverCommandTimer.stopTiming(); // Spigot
+
+  }
+
+  public boolean m_6982_() {
+    return true;
+  }
+
+  public int m_7032_() {
+    return this.m_7913_().f_139713_;
+  }
+
+  public boolean m_6994_() {
+    return this.m_7913_().f_139707_;
+  }
+
+  public DedicatedPlayerList m_6846_() {
+    return (DedicatedPlayerList) super.m_6846_();
+  }
+
+  public boolean m_6992_() {
+    return true;
+  }
+
+  public String m_6866_() {
+    return this.m_130009_();
+  }
+
+  public int m_7448_() {
+    return this.m_7010_();
+  }
+
+  public String m_6995_() {
+    return this.m_129916_();
+  }
+
+  public void m_139667_() {
+    if (this.f_139605_ == null) {
+      this.f_139605_ = MinecraftServerGui.m_139921_(this);
+    }
+
+  }
+
+  public boolean m_6370_() {
+    return this.f_139605_ != null;
+  }
+
+  public boolean m_6993_() {
+    return this.m_7913_().f_139708_;
+  }
+
+  public int m_6396_() {
+    return this.m_7913_().f_139709_;
+  }
+
+  public boolean m_7762_(ServerLevel p_139630_, BlockPos p_139631_, Player p_139632_) {
+    if (p_139630_.m_46472_() != Level.f_46428_) {
+      return false;
+    } else if (this.m_6846_().m_11307_().m_11390_()) {
+      return false;
+    } else if (this.m_6846_().m_11303_(p_139632_.m_36316_())) {
+      return false;
+    } else if (this.m_6396_() <= 0) {
+      return false;
+    } else {
+      BlockPos blockpos = p_139630_.m_220360_();
+      int i = Mth.m_14040_(p_139631_.m_123341_() - blockpos.m_123341_());
+      int j = Mth.m_14040_(p_139631_.m_123343_() - blockpos.m_123343_());
+      int k = Math.max(i, j);
+      return k <= this.m_6396_();
+    }
+  }
+
+  public boolean m_6373_() {
+    return this.m_7913_().f_139722_;
+  }
+
+  public boolean m_183306_() {
+    return this.m_7913_().f_183716_;
+  }
+
+  public int m_7022_() {
+    return this.m_7913_().f_139710_;
+  }
+
+  public int m_7034_() {
+    return this.m_7913_().f_139711_;
+  }
+
+  public void m_7196_(int p_139676_) {
+    super.m_7196_(p_139676_);
+    this.f_139604_.m_139778_((p_248196_) -> {
+      return p_248196_.f_139725_.m_139895_(this.m_206579_(), p_139676_);
+    });
+  }
+
+  public boolean m_6983_() {
+    return this.m_7913_().f_139717_;
+  }
+
+  public boolean m_6102_() {
+    return this.m_7913_().f_139718_;
+  }
+
+  public int m_6329_() {
+    return this.m_7913_().f_139719_;
+  }
+
+  public int m_6328_() {
+    return this.m_7913_().f_139716_;
+  }
+
+  public boolean m_214005_() {
+    return this.m_7913_().f_214804_ && this.m_7913_().f_139728_;
+  }
+
+  protected boolean m_139668_() {
+    boolean flag = false;
+
+    for (int i = 0; !flag && i <= 2; ++i) {
+      if (i > 0) {
+        f_139598_.warn("Encountered a problem while converting the user banlist, retrying in a few seconds");
+        this.m_139671_();
+      }
+
+      flag = OldUsersConverter.m_11081_(this);
+    }
+
+    boolean flag1 = false;
+
+    for (int j = 0; !flag1 && j <= 2; ++j) {
+      if (j > 0) {
+        f_139598_.warn("Encountered a problem while converting the ip banlist, retrying in a few seconds");
+        this.m_139671_();
+      }
+
+      flag1 = OldUsersConverter.m_11098_(this);
+    }
+
+    boolean flag2 = false;
+
+    for (int k = 0; !flag2 && k <= 2; ++k) {
+      if (k > 0) {
+        f_139598_.warn("Encountered a problem while converting the op list, retrying in a few seconds");
+        this.m_139671_();
+      }
+
+      flag2 = OldUsersConverter.m_11102_(this);
+    }
+
+    boolean flag3 = false;
+
+    for (int l = 0; !flag3 && l <= 2; ++l) {
+      if (l > 0) {
+        f_139598_.warn("Encountered a problem while converting the whitelist, retrying in a few seconds");
+        this.m_139671_();
+      }
+
+      flag3 = OldUsersConverter.m_11104_(this);
+    }
+
+    boolean flag4 = false;
+
+    for (int i1 = 0; !flag4 && i1 <= 2; ++i1) {
+      if (i1 > 0) {
+        f_139598_.warn("Encountered a problem while converting the player save files, retrying in a few seconds");
+        this.m_139671_();
+      }
+
+      flag4 = OldUsersConverter.m_11090_(this);
+    }
+
+    return flag || flag1 || flag2 || flag3 || flag4;
+  }
+
+  private void m_139671_() {
+    try {
+      Thread.sleep(5000L);
+    } catch (InterruptedException interruptedexception) {
+    }
+  }
+
+  public long m_139669_() {
+    return this.m_7913_().f_139712_;
+  }
+
+  public int m_213994_() {
+    return this.m_7913_().f_214801_;
+  }
+
+  public String m_7138_() {
+    // CraftBukkit start - Whole method
+    StringBuilder result = new StringBuilder();
+    org.bukkit.plugin.Plugin[] plugins = server.getPluginManager().getPlugins();
+
+    result.append(server.getName());
+    result.append(" on Bukkit ");
+    result.append(server.getBukkitVersion());
+
+    if (plugins.length > 0 && server.getQueryPlugins()) {
+      result.append(": ");
+
+      for (int i = 0; i < plugins.length; i++) {
+        if (i > 0) {
+          result.append("; ");
+        }
+
+        result.append(plugins[i].getDescription().getName());
+        result.append(" ");
+        result.append(plugins[i].getDescription().getVersion().replaceAll(";", ","));
+      }
+    }
+
+    return result.toString();
+    // CraftBukkit end
+  }
+
+  public String m_7261_(String p_139644_) {
+    this.f_139602_.m_11512_();
+    this.m_18709_(() -> {
+      // CraftBukkit start - fire RemoteServerCommandEvent
+      RemoteServerCommandEvent event = new RemoteServerCommandEvent(remoteConsole, p_139644_);
+      server.getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+        return;
+      }
+      ConsoleInput serverCommand = new ConsoleInput(event.getCommand(), f_139602_.m_11514_());
+      server.dispatchServerCommand(remoteConsole, serverCommand);
+      // CraftBukkit end
+    });
+    return this.f_139602_.m_11513_();
+  }
+
+  public void m_139688_(boolean p_139689_) {
+    this.f_139604_.m_139778_((p_248193_) -> {
+      return p_248193_.f_139726_.m_139895_(this.m_206579_(), p_139689_);
+    });
+  }
+
+  public void m_7041_() {
+    super.m_7041_();
+    Util.m_137580_();
+    SkullBlockEntity.m_196704_();
+  }
+
+  public boolean m_7779_(GameProfile p_139642_) {
+    return false;
+  }
+
+  public int m_7186_(int p_139659_) {
+    return this.m_7913_().f_139723_ * p_139659_ / 100;
+  }
+
+  public String m_7123_() {
+    return this.f_129744_.m_78277_();
+  }
+
+  public boolean m_6365_() {
+    return this.f_139604_.m_139777_().f_139720_;
+  }
+
+  public TextFilter m_7950_(ServerPlayer p_139634_) {
+    return this.f_139606_ != null ? this.f_139606_.m_10134_(p_139634_.m_36316_()) :
+        TextFilter.f_143703_;
+  }
+
+  @Nullable
+  public GameType m_142359_() {
+    return this.f_139604_.m_139777_().f_139737_ ? this.f_129749_.m_5464_() : null;
+  }
+
+  public Optional<MinecraftServer.ServerResourcePackInfo> m_214042_() {
+    return this.f_139604_.m_139777_().f_214802_;
+  }
+
+  // CraftBukkit start
+  public boolean isDebugging() {
+    return this.m_7913_().debug;
+  }
+
+  @Override
+  public CommandSender getBukkitSender(CommandSourceStack wrapper) {
+    return console;
+  }
+  // CraftBukkit end
 }
